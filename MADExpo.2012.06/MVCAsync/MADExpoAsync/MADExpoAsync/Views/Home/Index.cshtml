@{
    ViewBag.Title = "Speakers";
}
<script type="text/html" id="speaker-template">
    <div class="header" data-bind="visible: $index() === 0">
        Sort by <a href="#" data-bind="click: function() { $root.sortFirstName(); }">First Name</a> or
        <a href="#" data-bind="click: function() {$root.sortLastName();}">Last Name</a>
    </div>
    <div class="speaker" data-bind="oddItemClass: {class: 'odd', index: $index()}">
        <img data-bind="attr: {src: '@Url.Action("Image")/' + SpeakerId}" />
        <a class="name" data-bind="attr: {href: '@Url.Action("Speaker")/' + SpeakerId}">
            <span data-bind="MADText: FirstName" />
            <span data-bind="MADText: LastName" />
        </a>
        <p class="bio" data-bind="text: Bio"></p>
        <div class="social" data-bind="twitter: Twitter">
        </div>
    </div>
    <div style="clear: both"></div>
</script>

<div id="speakers" data-bind="template: { name: 'speaker-template', foreach: speakers }">
    <div id="loading">
        <img src="~/Content/images/spinner.gif" />
        <p>Hang tight...</p>
    </div>
</div>

@section Scripts {
@Scripts.Render("~/bundles/bindingHandlers")
<script type="text/javascript">
    function SpeakerModel() {
        this.speakerClick = function () {
            window.location.href = '@Url.Action("Profile")/' + this.SpeakerId;
        };

        this.sortFirstName = function () {
            this.speakers.sort(function (left, right) {
                return left.FirstName < right.FirstName ? -1 : left.FirstName > right.FirstName ? 1 : 0;
            });
        };

        this.sortLastName = function () {
            this.speakers.sort(function (left, right) {
                return left.LastName < right.LastName ? -1 : left.LastName > right.LastName ? 1 : 0;
            });
        };
    }
    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("GetSpeakers")',
            dataType: 'json'
        }).done(function (d) {
            var model = new SpeakerModel();
            var items = ko.observableArray(d.Result);
            model.speakers = items;
            ko.applyBindings(model);
            window.setTimeout(function () {
                $("#loading").remove();
            }, 0);
        });
    });
</script>
}